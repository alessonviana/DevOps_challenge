---
kind: pipeline
type: docker
name: challenge_DevOps

steps:

- name: Install AWS CLI and create a bucket
  image: alesson23/terraforandansible:1.0.0
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret
  commands:
    - apt install curl -y
    - apt update
    - apt install python3-pip -y
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - aws --version
    - aws s3api create-bucket --bucket challenge-backend --region us-east-1

- name: initialize aws plugin for terraform
  image: alesson23/terraforandansible:1.0.0
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret
  commands:
    - cd ./infra
    - terraform init 
  
- name: create aws infra
  image: alesson23/terraforandansible:1.0.0
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret
  commands:
  - cd ./infra
  - terraform plan 
  - terraform apply -auto-approve 
  
- name: apply ansible playbook
  image: alesson23/terraforandansible:1.0.0
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: aws_access
    AWS_SECRET_ACCESS_KEY:
      from_secret: aws_secret
    PRIVATE_KEY:
      from_secret: private_key
  commands:
  - mkdir -p ~/.ssh/
  - pwd
  - echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 777 ~/.ssh/id_rsa
  - cat ~/.ssh/id_rsa
  #- unset private_key
  #- sudo ssh -i "id_rsa.pem" ubuntu@100.26.151.134 -o StrictHostKeyChecking=no
#  - ansible -m ping tag_name_machine01_DevOps
#  - ansible -i ec2.py us-east-1 -m ping
  - ansible-playbook -i ec2.py --limit "tag_name_machine01_DevOps" -u ubuntu --ssh-common-args='-o StrictHostKeyChecking=no' --private-key ~/.ssh/id_rsa site.yml
